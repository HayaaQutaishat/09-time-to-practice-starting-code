{"version":3,"file":"static/js/857.c9f91bce.chunk.js","mappings":"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","sources":["webpack://react-complete-guide/./src/components/comments/Comments.module.css?d88e","webpack://react-complete-guide/./src/components/comments/NewCommentForm.module.css?81c1","components/comments/NewCommentForm.js","webpack://react-complete-guide/./src/components/comments/CommentItem.module.css?204f","components/comments/CommentItem.js","webpack://react-complete-guide/./src/components/comments/CommentsList.module.css?06d6","components/comments/CommentsList.js","components/comments/Comments.js","webpack://react-complete-guide/./src/components/quotes/HighlightedQuote.module.css?c98c","components/quotes/HighlightedQuote.js","pages/QuoteDetail.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"comments\":\"Comments_comments__9cxIN\"};","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"NewCommentForm_form__C3cQf\",\"loading\":\"NewCommentForm_loading__aSq20\",\"control\":\"NewCommentForm_control__iR6jS\",\"actions\":\"NewCommentForm_actions__NC323\"};","import { useEffect, useRef } from \"react\";\nimport useHttp from \"../../hooks/use-http\";\nimport { addComment } from \"../../lib/api\";\nimport classes from \"./NewCommentForm.module.css\";\nimport { useParams } from \"react-router-dom\";\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\n\nconst NewCommentForm = (props) => {\n  const commentTextRef = useRef();\n  const params = useParams();\n  const { sendRequest, status, error } = useHttp(addComment);\n\n  const { quoteId } = params;\n  const { onDoneAddComment } = props;\n\n  useEffect(() => {\n    if (status === \"completed\" && !error) {\n      onDoneAddComment();\n    }\n  }, [status, error, onDoneAddComment]);\n\n  const submitFormHandler = (event) => {\n    event.preventDefault();\n    const enteredComment = commentTextRef.current.value;\n    // optional: Could validate here\n    // send comment to server\n    sendRequest({ commentData: { text: enteredComment }, quoteId: quoteId });\n  };\n\n  return (\n    <form className={classes.form} onSubmit={submitFormHandler}>\n      {status === \"pending\" && (\n        <div className=\"centered\">\n          <LoadingSpinner />\n        </div>\n      )}\n      <div className={classes.control} onSubmit={submitFormHandler}>\n        <label htmlFor=\"comment\">Your Comment</label>\n        <textarea id=\"comment\" rows=\"5\" ref={commentTextRef}></textarea>\n      </div>\n      <div className={classes.actions}>\n        <button className=\"btn\">Add Comment</button>\n      </div>\n    </form>\n  );\n};\n\nexport default NewCommentForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"CommentItem_item__+vwzS\"};","import classes from './CommentItem.module.css';\n\nconst CommentItem = (props) => {\n  return (\n    <li className={classes.item}>\n      <p>{props.text}</p>\n    </li>\n  );\n};\n\nexport default CommentItem;\n","// extracted by mini-css-extract-plugin\nexport default {\"comments\":\"CommentsList_comments__UVWAR\"};","import CommentItem from './CommentItem';\nimport classes from './CommentsList.module.css';\n\nconst CommentsList = (props) => {\n  return (\n    <ul className={classes.comments}>\n      {props.comments.map((comment) => (\n        <CommentItem key={comment.id} text={comment.text} />\n      ))}\n    </ul>\n  );\n};\n\nexport default CommentsList;\n","import { useState, useCallback, useEffect } from \"react\";\nimport useHttp from \"../../hooks/use-http\";\nimport classes from \"./Comments.module.css\";\nimport NewCommentForm from \"./NewCommentForm\";\nimport { getAllComments } from \"../../lib/api\";\nimport { useParams } from \"react-router-dom\";\nimport CommentsList from \"./CommentsList\";\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\n\nconst Comments = () => {\n  const [isAddingComment, setIsAddingComment] = useState(false);\n  const { sendRequest, data, status } = useHttp(getAllComments, true);\n\n  const { quoteId } = useParams();\n\n  useEffect(() => {\n    sendRequest(quoteId);\n  }, [quoteId, sendRequest]);\n\n  const startAddCommentHandler = () => {\n    setIsAddingComment(true);\n  };\n\n  const doneAddCommentHandler = useCallback(() => {\n    sendRequest(quoteId);\n  }, [quoteId, sendRequest]);\n\n  let comments;\n\n  if (status === \"pending\") {\n    comments = (\n      <div className=\"centered\">\n        <LoadingSpinner />\n      </div>\n    );\n  }\n  if (status === \"completed\" && (!data || data.length === 0)) {\n    comments = <p className=\"centered\">No Comments were added yet!</p>;\n  }\n  if (status === \"completed\" && data && data.length > 0) {\n    comments = <CommentsList comments={data} />;\n  }\n\n  return (\n    <section className={classes.comments}>\n      <h2>User Comments</h2>\n      {!isAddingComment && (\n        <button className=\"btn\" onClick={startAddCommentHandler}>\n          Add a Comment\n        </button>\n      )}\n      {isAddingComment && (\n        <NewCommentForm onDoneAddComment={doneAddCommentHandler} />\n      )}\n      {comments}\n    </section>\n  );\n};\n\nexport default Comments;\n","// extracted by mini-css-extract-plugin\nexport default {\"quote\":\"HighlightedQuote_quote__dE8qA\"};","import classes from './HighlightedQuote.module.css';\n\nconst HighlightedQuote = (props) => {\n  return (\n    <figure className={classes.quote}>\n      <p>{props.text}</p>\n      <figcaption>{props.author}</figcaption>\n    </figure>\n  );\n};\n\nexport default HighlightedQuote;\n","import { Fragment } from \"react\";\nimport { useParams, Route, Link, useRouteMatch } from \"react-router-dom\";\nimport Comments from \"../components/comments/Comments\";\nimport HighlightedQuote from \"../components/quotes/HighlightedQuote\";\nimport useHttp from \"../hooks/use-http\";\nimport { getSingleQuote } from \"../lib/api\";\nimport { useEffect } from \"react\";\nimport LoadingSpinner from \"../components/UI/LoadingSpinner\";\n\nconst QuoteDetail = () => {\n  const params = useParams();\n  const match = useRouteMatch();\n  const { sendRequest, data, status, error } = useHttp(getSingleQuote, true);\n\n  // console.log(match);\n\n  const { quoteId } = params;\n\n  useEffect(() => {\n    sendRequest(quoteId);\n  }, [sendRequest, quoteId]);\n\n  if (status === \"pending\") {\n    return (\n      <div className=\"centered\">\n        <LoadingSpinner />\n      </div>\n    );\n  }\n  if (error) {\n    return <div className=\"centered\">{error}</div>;\n  }\n\n  if (!data.text) {\n    return (\n      <div className=\"centered\">\n        <h1>No Quote Found!</h1>\n      </div>\n    );\n  }\n\n  return (\n    <Fragment>\n      <HighlightedQuote text={data.text} author={data.author} />\n      <Route path={match.path} exact>\n        <div className=\"centered\">\n          <Link className=\"btn--flat\" to={`${match.url}/comments`}>\n            Load Comments\n          </Link>\n        </div>\n      </Route>\n      <Route path={`${match.path}/comments`}>\n        <Comments />\n      </Route>\n    </Fragment>\n  );\n};\n\nexport default QuoteDetail;\n"],"names":["props","commentTextRef","useRef","params","useParams","useHttp","addComment","sendRequest","status","error","quoteId","onDoneAddComment","useEffect","submitFormHandler","event","preventDefault","enteredComment","current","value","commentData","text","className","classes","onSubmit","LoadingSpinner","htmlFor","id","rows","ref","comments","map","comment","useState","isAddingComment","setIsAddingComment","getAllComments","data","doneAddCommentHandler","useCallback","length","onClick","author","match","useRouteMatch","getSingleQuote","Fragment","path","exact","to","url"],"sourceRoot":""}